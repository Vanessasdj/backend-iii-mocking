{
  "info": {
    "name": "Backend III - Sistema de Mocking",
    "description": "Collection completa para testar todos os endpoints do sistema de mocking para usu√°rios e pets",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üè† Endpoints Principais",
      "description": "Endpoints b√°sicos do sistema",
      "item": [
        {
          "name": "GET - P√°gina Inicial",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Endpoint raiz que mostra informa√ß√µes do sistema e lista de endpoints dispon√≠veis"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• Usu√°rios (Users)",
      "description": "Endpoints para gerenciamento de usu√°rios",
      "item": [
        {
          "name": "GET - Listar Todos os Usu√°rios",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Busca todos os usu√°rios cadastrados na base de dados"
          },
          "response": []
        },
        {
          "name": "GET - Buscar Usu√°rio por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Busca um usu√°rio espec√≠fico pelo seu ID"
          },
          "response": []
        },
        {
          "name": "POST - Criar Novo Usu√°rio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Jo√£o\",\n  \"last_name\": \"Silva\",\n  \"email\": \"joao.silva@example.com\",\n  \"password\": \"senha123\",\n  \"role\": \"user\",\n  \"pets\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Cria um novo usu√°rio no sistema"
          },
          "response": []
        },
        {
          "name": "PUT - Atualizar Usu√°rio",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Jo√£o Atualizado\",\n  \"last_name\": \"Silva Santos\",\n  \"email\": \"joao.updated@example.com\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Atualiza os dados de um usu√°rio existente"
          },
          "response": []
        },
        {
          "name": "DELETE - Deletar Usu√°rio",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Remove um usu√°rio do sistema"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üêæ Pets",
      "description": "Endpoints para gerenciamento de pets",
      "item": [
        {
          "name": "GET - Listar Todos os Pets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets"]
            },
            "description": "Busca todos os pets cadastrados na base de dados"
          },
          "response": []
        },
        {
          "name": "GET - Buscar Pet por ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pets/{{petId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets", "{{petId}}"]
            },
            "description": "Busca um pet espec√≠fico pelo seu ID"
          },
          "response": []
        },
        {
          "name": "POST - Criar Novo Pet",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Rex\",\n  \"specie\": \"dog\",\n  \"birthDate\": \"2020-05-15T00:00:00.000Z\",\n  \"adopted\": false,\n  \"owner\": null,\n  \"image\": \"https://example.com/pet-image.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/pets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets"]
            },
            "description": "Cria um novo pet no sistema"
          },
          "response": []
        },
        {
          "name": "PUT - Atualizar Pet",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Rex Atualizado\",\n  \"specie\": \"dog\",\n  \"adopted\": true,\n  \"owner\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/pets/{{petId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets", "{{petId}}"]
            },
            "description": "Atualiza os dados de um pet existente"
          },
          "response": []
        },
        {
          "name": "DELETE - Deletar Pet",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pets/{{petId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets", "{{petId}}"]
            },
            "description": "Remove um pet do sistema"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üé≠ Mocking (Dados Falsos)",
      "description": "Endpoints para gera√ß√£o de dados mockados - FUNCIONALIDADE PRINCIPAL",
      "item": [
        {
          "name": "GET - Mocking Pets (Migrado)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/mocks/mockingpets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "mockingpets"]
            },
            "description": "‚≠ê ENDPOINT MIGRADO - Gera 100 pets mockados com dados falsos. Este endpoint foi migrado do router pets para o router mocks."
          },
          "response": []
        },
        {
          "name": "GET - Mocking Users (50 usu√°rios)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/mocks/mockingusers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "mockingusers"]
            },
            "description": "‚≠ê ENDPOINT PRINCIPAL - Gera 50 usu√°rios mockados com:\n- Senha 'coder123' encriptada\n- Role variando entre 'user' e 'admin'\n- Array de pets vazio\n- Formato compat√≠vel com MongoDB"
          },
          "response": []
        },
        {
          "name": "POST - Generate Data (Inserir na Base)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": 5,\n  \"pets\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "‚≠ê ENDPOINT PRINCIPAL - Gera e insere dados mockados na base de dados.\nPar√¢metros:\n- users: n√∫mero de usu√°rios para gerar\n- pets: n√∫mero de pets para gerar\n\nOs dados gerados s√£o inseridos diretamente na base de dados MongoDB."
          },
          "response": []
        },
        {
          "name": "POST - Generate Only Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": 3,\n  \"pets\": 0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "Gera e insere apenas usu√°rios na base de dados (pets = 0)"
          },
          "response": []
        },
        {
          "name": "POST - Generate Only Pets",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": 0,\n  \"pets\": 7\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "Gera e insere apenas pets na base de dados (users = 0)"
          },
          "response": []
        },
        {
          "name": "POST - Generate Large Dataset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": 20,\n  \"pets\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "Gera um conjunto maior de dados para testes de performance"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Testes de Valida√ß√£o",
      "description": "Sequ√™ncia de testes para validar todos os crit√©rios do projeto",
      "item": [
        {
          "name": "1Ô∏è‚É£ Testar Migra√ß√£o - Mockingpets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/mocks/mockingpets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "mockingpets"]
            },
            "description": "TESTE CR√çTICO: Verificar se o endpoint /mockingpets foi migrado corretamente para /api/mocks/mockingpets"
          },
          "response": []
        },
        {
          "name": "2Ô∏è‚É£ Testar Gera√ß√£o - 50 Usu√°rios",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/mocks/mockingusers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "mockingusers"]
            },
            "description": "TESTE CR√çTICO: Verificar se gera exatamente 50 usu√°rios com senha encriptada, roles vari√°veis e pets vazios"
          },
          "response": []
        },
        {
          "name": "3Ô∏è‚É£ Testar Inser√ß√£o - Generate Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": 2,\n  \"pets\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "TESTE CR√çTICO: Verificar se o endpoint recebe par√¢metros e insere dados na base"
          },
          "response": []
        },
        {
          "name": "4Ô∏è‚É£ Verificar Usu√°rios Inseridos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "TESTE CR√çTICO: Verificar se os usu√°rios foram inseridos na base e s√£o acess√≠veis via GET"
          },
          "response": []
        },
        {
          "name": "5Ô∏è‚É£ Verificar Pets Inseridos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets"]
            },
            "description": "TESTE CR√çTICO: Verificar se os pets foram inseridos na base e s√£o acess√≠veis via GET"
          },
          "response": []
        }
      ]
    },
    {
      "name": "‚ö†Ô∏è Testes de Erro",
      "description": "Testes para validar tratamento de erros",
      "item": [
        {
          "name": "GET - Usu√°rio Inexistente",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/000000000000000000000000",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "000000000000000000000000"]
            },
            "description": "Testa resposta para usu√°rio inexistente (deve retornar 404)"
          },
          "response": []
        },
        {
          "name": "GET - Pet Inexistente",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/pets/000000000000000000000000",
              "host": ["{{baseUrl}}"],
              "path": ["api", "pets", "000000000000000000000000"]
            },
            "description": "Testa resposta para pet inexistente (deve retornar 404)"
          },
          "response": []
        },
        {
          "name": "GET - Endpoint Inexistente",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/inexistente",
              "host": ["{{baseUrl}}"],
              "path": ["api", "inexistente"]
            },
            "description": "Testa resposta para endpoint inexistente (deve retornar 404)"
          },
          "response": []
        },
        {
          "name": "POST - Par√¢metros Inv√°lidos Generate Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"users\": -1,\n  \"pets\": \"abc\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/mocks/generateData",
              "host": ["{{baseUrl}}"],
              "path": ["api", "mocks", "generateData"]
            },
            "description": "Testa valida√ß√£o de par√¢metros inv√°lidos (deve retornar 400)"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "description": "URL base do servidor (ajuste a porta se necess√°rio)"
    },
    {
      "key": "userId",
      "value": "",
      "description": "ID de um usu√°rio espec√≠fico para testes (ser√° preenchido ap√≥s criar/buscar usu√°rio)"
    },
    {
      "key": "petId",
      "value": "",
      "description": "ID de um pet espec√≠fico para testes (ser√° preenchido ap√≥s criar/buscar pet)"
    }
  ]
}
