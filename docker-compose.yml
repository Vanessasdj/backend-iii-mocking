version: "3.8"

services:
  # Aplicação Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: vanessasdj/backend-iii-mocking:latest
    container_name: backend-iii-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - MONGODB_URI=mongodb://mongo:27017/backend-mocking
    depends_on:
      - mongo
    networks:
      - backend-network
    volumes:
      - app-logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Banco de dados MongoDB
  mongo:
    image: mongo:7-jammy
    container_name: backend-iii-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=backend-mocking
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ismaster')"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Interface de administração do MongoDB (opcional)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: backend-iii-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_URL=mongodb://admin:admin123@mongo:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    networks:
      - backend-network

# Volumes para persistência de dados
volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local
  app-logs:
    driver: local

# Rede personalizada
networks:
  backend-network:
    driver: bridge
